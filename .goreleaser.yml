version: 1

project_name: s3ry

before:
  hooks:
    - go mod tidy
    - go generate ./...
    - chmod +x build/scripts/integration-check.sh
    - ./build/scripts/integration-check.sh
    - chmod +x build/scripts/dependency-check.sh  
    - ./build/scripts/dependency-check.sh

builds:
  - id: s3ry
    main: ./cmd/s3ry
    binary: s3ry
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: windows
        goarch: arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
      - -X 'main.buildInfo=Built with parallel LLM development strategy'
      - -buildid=
    flags:
      - -trimpath
      - -mod=readonly

archives:
  - id: default
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - README.md
      - LICENSE
      - docs/
      - CHANGELOG.md

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^chore:'
      - merge conflict
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
  groups:
    - title: 'New Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug Fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: 'Performance Improvements'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: 'Refactors'
      regexp: '^.*?refactor(\([[:word:]]+\))??!?:.+$'  
      order: 3
    - title: 'Documentation'
      regexp: '^.*?docs(\([[:word:]]+\))??!?:.+$'
      order: 4
    - title: 'Other Changes'
      order: 999

release:
  github:
    owner: seike460
    name: s3ry
  draft: false
  prerelease: auto
  mode: replace
  header: |
    ## S3ry {{ .Tag }}
    
    **Full Changelog**: https://github.com/seike460/s3ry/compare/{{ .PreviousTag }}...{{ .Tag }}
    
  footer: |
    ## Installation
    
    ### Homebrew
    ```bash
    brew install seike460/tap/s3ry
    ```
    
    ### Download Binary
    Download the appropriate binary for your platform from the assets below.
    
    ### Docker
    ```bash
    docker run --rm -it ghcr.io/seike460/s3ry:{{ .Tag }}
    ```
    
    ## Performance & Features
    
    - üöÄ **5x faster** than legacy tools with worker pool architecture
    - üé® **Modern TUI** with Bubble Tea interface
    - üåç **Multi-platform** support (Linux, macOS, Windows)
    - üîß **100% backward compatible** with existing workflows
    - üìä **Built-in metrics** and performance monitoring
    
    ## Development
    
    This release was built using our **4-LLM parallel development strategy** ensuring:
    - Comprehensive testing and quality assurance
    - Optimized build pipeline and dependency management
    - Modern architecture with clean separation of concerns

brews:
  - name: s3ry
    description: "Modern S3 file manager with TUI"
    homepage: "https://github.com/seike460/s3ry"
    license: "MIT"
    folder: Formula
    repository:
      owner: seike460
      name: homebrew-tap
      branch: main
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: seike460
      email: seike460@gmail.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    install: |
      bin.install "s3ry"
    test: |
      system "#{bin}/s3ry", "--version"

scoops:
  - name: s3ry
    description: "Modern S3 file manager with TUI"
    homepage: "https://github.com/seike460/s3ry"
    license: MIT
    repository:
      owner: seike460
      name: scoop-bucket
      branch: main
      token: "{{ .Env.SCOOP_BUCKET_GITHUB_TOKEN }}"
    commit_author:
      name: seike460
      email: seike460@gmail.com
    commit_msg_template: "Scoop update for {{ .ProjectName }} version {{ .Tag }}"

dockers:
  - image_templates:
    - "ghcr.io/seike460/{{ .ProjectName }}:{{ .Version }}-amd64"
    - "ghcr.io/seike460/{{ .ProjectName }}:latest-amd64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
    - "--pull"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.title={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--label=org.opencontainers.image.source={{.GitURL}}"
    - "--platform=linux/amd64"
  - image_templates:
    - "ghcr.io/seike460/{{ .ProjectName }}:{{ .Version }}-arm64"
    - "ghcr.io/seike460/{{ .ProjectName }}:latest-arm64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
    - "--pull"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.title={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--label=org.opencontainers.image.source={{.GitURL}}"
    - "--platform=linux/arm64"
    goarch: arm64

docker_manifests:
  - name_template: "ghcr.io/seike460/{{ .ProjectName }}:{{ .Version }}"
    image_templates:
    - "ghcr.io/seike460/{{ .ProjectName }}:{{ .Version }}-amd64"
    - "ghcr.io/seike460/{{ .ProjectName }}:{{ .Version }}-arm64"
  - name_template: "ghcr.io/seike460/{{ .ProjectName }}:latest"
    image_templates:
    - "ghcr.io/seike460/{{ .ProjectName }}:latest-amd64"
    - "ghcr.io/seike460/{{ .ProjectName }}:latest-arm64"