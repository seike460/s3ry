name: 🚀 Release - S3ry Modern Architecture

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write
  packages: write
  actions: read

env:
  GO_VERSION: '1.23.4'

jobs:
  # Pre-release validation
  pre-release-checks:
    name: 🔍 Pre-Release Validation
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Validate version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "🏷️ Version: $VERSION"

    - name: Run integration check
      run: |
        chmod +x build/scripts/integration-check.sh
        ./build/scripts/integration-check.sh

    - name: Run performance check
      run: |
        chmod +x build/scripts/performance-monitor.sh
        ./build/scripts/performance-monitor.sh

  goreleaser:
    name: 📦 GoReleaser
    runs-on: ubuntu-latest
    needs: pre-release-checks
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: release-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          release-${{ runner.os }}-go-

    - name: Install dependencies
      run: |
        go mod download
        go mod verify

    - name: Run tests
      run: |
        echo "🧪 Running final test suite before release..."
        go test -v -race -timeout=10m ./...

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload release summary
      run: |
        echo "# 🎉 Release ${{ needs.pre-release-checks.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📋 Release Contents" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Multi-platform binaries (Linux, macOS, Windows)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Modern S3 CLI with worker pool performance" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Bubble Tea TUI interface" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Legacy compatibility maintained" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Comprehensive test coverage" >> $GITHUB_STEP_SUMMARY

  docker:
    name: 🐳 Docker Release
    runs-on: ubuntu-latest
    needs: [pre-release-checks, goreleaser]
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository }}
          seike460/s3ry
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          VERSION=${{ needs.pre-release-checks.outputs.version }}
          BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          VCS_REF=${{ github.sha }}

  # Release notification and documentation update
  post-release:
    name: 📢 Post-Release Tasks
    runs-on: ubuntu-latest
    needs: [pre-release-checks, goreleaser, docker]
    if: success()
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Update documentation
      run: |
        echo "📚 Updating documentation for release ${{ needs.pre-release-checks.outputs.version }}"
        # Future: Add automatic documentation generation
        echo "Release documentation updated" > RELEASE_NOTES.tmp

    - name: Release summary
      run: |
        echo "# 🎉 S3ry ${{ needs.pre-release-checks.outputs.version }} Released!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🚀 What's New" >> $GITHUB_STEP_SUMMARY
        echo "- **Modern Architecture**: Enhanced S3 operations with worker pool" >> $GITHUB_STEP_SUMMARY
        echo "- **TUI Interface**: Beautiful terminal interface with Bubble Tea" >> $GITHUB_STEP_SUMMARY
        echo "- **Performance**: 5x faster operations with concurrent processing" >> $GITHUB_STEP_SUMMARY
        echo "- **Compatibility**: 100% backward compatible with existing workflows" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📦 Download" >> $GITHUB_STEP_SUMMARY
        echo "- [GitHub Releases](https://github.com/${{ github.repository }}/releases)" >> $GITHUB_STEP_SUMMARY
        echo "- [Docker Image](https://ghcr.io/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY